#pragma once

#include <Arduboy2.h>
#include "../Utils/Constants.h"

const unsigned char PROGMEM tiles[15][8] =
{
  {0x0d, 0x9f, 0x2d, 0x97, 0x0d, 0x9f, 0x2d, 0x97 },
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
  {0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40 },
  {0x0a, 0x01, 0x01, 0x12, 0x12, 0x01, 0x01, 0x0a },
  {0x40, 0x40, 0x4f, 0x09, 0xed, 0x09, 0x4f, 0x40 },
  {0x05, 0x02, 0x05, 0x02, 0x05, 0x02, 0x05, 0x02 },
  {0xa5, 0x42, 0x99, 0xb5, 0xa5, 0x99, 0x42, 0xa5 },
  {0x5a, 0x87, 0x39, 0xd6, 0xd6, 0x39, 0x87, 0x5a },
  {0x5a, 0x87, 0x39, 0xd6, 0xd6, 0x39, 0x87, 0x5a },
  {0x82, 0x5a, 0x9a, 0x42, 0x98, 0x5a, 0x9a, 0x58 },
  {0x40, 0x50, 0x40, 0x60, 0x40, 0x50, 0x40, 0x60 },
  {0x18, 0x24, 0x7e, 0x42, 0x6a, 0x7c, 0x02, 0x04 }, // Fuel.
  {0xee, 0xdd, 0x9d, 0x71, 0xef, 0xde, 0x9d, 0x7b }, // Sand.
  {0xfa, 0x3f, 0x00, 0x1f, 0xfa, 0x1f, 0x00, 0x3f }, // SpikeUP.
  {0x5f, 0xfc, 0x00, 0xf8, 0x5f, 0xf8, 0x00, 0xfc, } // SpikeDOWN.
};


//-------------------------------------------------------------------------------------
// Introduction ..
//-------------------------------------------------------------------------------------

#define LEVEL_0_WIDTH 16
#define LEVEL_0_HEIGHT 8

const unsigned char PROGMEM level0Map[LEVEL_0_HEIGHT * LEVEL_0_WIDTH] = {
//0      1      2      3      4      5      6      7      8      9,     10     11     12     13     14     15     
  EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, 
  EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, 
  EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, 
  EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, 
  EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, 
  EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, 
  EMPTY, EMPTY, EMPTY, EDGE1, EDGE1, EDGE1, EDGE1, EDGE1, EDGE1, EDGE1, EDGE1, SIGN1, EDGE1, EMPTY, EMPTY, EMPTY, 
  WATER, WATER, SAND1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, SAND1, WATER, WATER, 
};

const uint8_t PROGMEM level0StartingPositions[2] = {
12, 6, 
};

const uint8_t PROGMEM level0EndingPositions[2] = {
12, 6, 
};

//-------------------------------------------------------------------------------------
// Level 1 ..
//-------------------------------------------------------------------------------------

#define LEVEL_1_WIDTH   34
#define LEVEL_1_HEIGHT  15

const unsigned char PROGMEM level1Map[LEVEL_1_HEIGHT * LEVEL_1_WIDTH] = {
//0      1      2      3      4      5      6      7      8      9,     10     11     12     13     14     15     16     17     18     19,    20     21     22     23     24     25     26     27     28     29,    30     31     32     33  
  ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, METAL, GATE1, GATE1, GATE1, METAL, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2,
  EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY,
  EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, GRASS, ROOF2,
  FUEL1, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EDGE1, METAL, EDGE1, EMPTY, EMPTY, EMPTY, EMPTY, SIGN1, EDGE1, EDGE1, EDGE1, EDGE1, EDGE1, EDGE1, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, GRASS, ROOF2, ROOF2,
  METAL, METAL, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, METAL, METAL, METAL, EMPTY, EMPTY, EMPTY, EMPTY, METAL, METAL, METAL, METAL, METAL, METAL, METAL, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, ROOF2, ROOF2, ROOF2,
  EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, ROOF2, ROOF2, ROOF2, EMPTY, EMPTY, EMPTY, GRASS, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, GRASS, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, ROOF2, ROOF2, ROOF2,
  EMPTY, EMPTY, EMPTY, GRASS, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, ROOF2, WATER, WATER, WATER, WATER, WATER, WATER, WATER, ROOF2, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, SPIKU, SPIKU, SPIKU,
  EMPTY, EMPTY, EMPTY, ROOF2, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY,
  EMPTY, EMPTY, EMPTY, ROOF2, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY,
  EMPTY, EMPTY, EMPTY, ROOF2, GRASS, EMPTY, EMPTY, EMPTY, EMPTY, GRASS, GRASS, SIGN1, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, GRASS, GRASS, GRASS, SIGN1,
  EMPTY, EMPTY, EMPTY, ROOF2, ROOF2, GRASS, EMPTY, EMPTY, EMPTY, BRICK, BRICK, BRICK, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, GRASS, EMPTY, EMPTY, EMPTY, EMPTY, GRASS, EMPTY, EMPTY, EMPTY, EMPTY, BRICK, BRICK, BRICK, BRICK,
  EMPTY, EMPTY, EMPTY, ROOF2, ROOF2, ROOF2, EMPTY, EMPTY, EMPTY, ROOF2, ROOF2, ROOF2, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, GRASS, ROOF2, GRASS, EMPTY, EMPTY, EMPTY, ROOF2, GRASS, EMPTY, EMPTY, EMPTY, ROOF2, ROOF2, ROOF2, ROOF2,
  GRASS, GRASS, SIGN1, ROOF2, ROOF2, ROOF2, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, GRASS, GRASS, SIGN1, ROOF2, ROOF2, ROOF2, EMPTY, EMPTY, EMPTY, ROOF2, ROOF2, GRASS, GRASS, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY,
  BRICK, BRICK, BRICK, ROOF2, ROOF2, ROOF2, GRASS, SIGN1, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, GRASS, BRICK, BRICK, BRICK, ROOF2, ROOF2, ROOF2, WATER, WATER, WATER, ROOF2, ROOF2, ROOF2, ROOF2, WATER, WATER, WATER, WATER, WATER,
  ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1,
};

const uint8_t PROGMEM level1StartingPositions[12] = {
1, 12,    10, 9,    8, 13,    16, 3,    17, 12,    32, 9,    
};

const uint8_t PROGMEM level1EndingPositions[12] = {
2, 12,    11, 9,    7, 13,    15, 3,    18, 12,    33, 9,    
};


//-------------------------------------------------------------------------------------
// Level 2 ..
//-------------------------------------------------------------------------------------

#define LEVEL_2_WIDTH   34
#define LEVEL_2_HEIGHT  20

const unsigned char PROGMEM level2Map[LEVEL_2_HEIGHT * LEVEL_2_WIDTH] = {
//0      1      2      3      4      5      6      7      8      9,     10     11     12     13     14     15     16     17     18     19,    20     21     22     23     24     25     26     27     28     29,    30     31     32     33  
  ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, GATE1, GATE1, GATE1, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2,
  ROOF2, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, ROOF2,
  EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY,
  EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY,
  EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EDGE1, EDGE1, EDGE1, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY,
  EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, ROOF2, ROOF2, ROOF2, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY,
  EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, ROOF2, ROOF2, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY,
  EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, ROOF2, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY,
  EMPTY, EMPTY, EMPTY, EDGE1, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EDGE1, EDGE1, SIGN1, ROOF2, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY,
  EMPTY, EMPTY, EMPTY, ROOF2, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, BRICK, BRICK, BRICK, ROOF2, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY,
  EMPTY, EMPTY, EMPTY, ROOF2, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, ROOF2, ROOF2, ROOF2, ROOF2, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY,
  EMPTY, EMPTY, EMPTY, ROOF2, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, ROOF2, ROOF2, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY,
  EMPTY, EMPTY, EMPTY, ROOF2, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, ROOF2, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY,
  EMPTY, EMPTY, EMPTY, ROOF2, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, ROOF2, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY,
  EMPTY, EMPTY, EMPTY, ROOF2, EDGE1, EDGE1, EMPTY, EMPTY, EMPTY, EMPTY, ROOF2, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY,
  EMPTY, EMPTY, EMPTY, ROOF2, ROOF2, ROOF2, EDGE1, EMPTY, EMPTY, EMPTY, ROOF2, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY,
  EMPTY, EMPTY, EMPTY, ROOF2, ROOF2, ROOF2, ROOF2, EMPTY, EMPTY, EMPTY, ROOF2, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY,
  EDGE1, EDGE1, SIGN1, ROOF2, ROOF2, ROOF2, ROOF2, EMPTY, EMPTY, EMPTY, ROOF2, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY,
  BRICK, BRICK, BRICK, ROOF2, ROOF2, ROOF2, ROOF2, WATER, WATER, WATER, ROOF2, WATER, WATER, WATER, ROOF2, EDGE1, EDGE1, EDGE1, EDGE1, EDGE1, EDGE1, EDGE1, EDGE1, EDGE1, EDGE1, EDGE1, EDGE1, EDGE1, EDGE1, EDGE1, EDGE1, EDGE1, EDGE1, EDGE1,
  PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1,
};

const uint8_t PROGMEM level2StartingPositions[8] = {
1, 2,    4, 5,    6, 6,    14,8, 
};

const uint8_t PROGMEM level2EndingPositions[8] = {
1, 2,    4, 5,    6, 6,    14,8, 
};


//-------------------------------------------------------------------------------------
// Level 3 ..
//-------------------------------------------------------------------------------------

#define LEVEL_3_WIDTH   34
#define LEVEL_3_HEIGHT  20

const unsigned char PROGMEM level3Map[LEVEL_3_HEIGHT * LEVEL_3_WIDTH] = {
//0      1      2      3      4      5      6      7      8      9,     10     11     12     13     14     15     16     17     18     19,    20     21     22     23     24     25     26     27     28     29,    30     31     32     33  
  ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, GATE1, GATE1, GATE1, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2, ROOF2,
  ROOF2, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, ROOF2,
  EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY,
  EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY,
  EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EDGE1, EDGE1, EDGE1, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY,
  EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, ROOF2, ROOF2, ROOF2, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY,
  EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, ROOF2, ROOF2, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY,
  EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, ROOF2, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY,
  EMPTY, EMPTY, EMPTY, EDGE1, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EDGE1, EDGE1, SIGN1, ROOF2, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY,
  EMPTY, EMPTY, EMPTY, ROOF2, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, BRICK, BRICK, BRICK, ROOF2, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY,
  EMPTY, EMPTY, EMPTY, ROOF2, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, ROOF2, ROOF2, ROOF2, ROOF2, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY,
  EMPTY, EMPTY, EMPTY, ROOF2, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, ROOF2, ROOF2, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY,
  EMPTY, EMPTY, EMPTY, ROOF2, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, ROOF2, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY,
  EMPTY, EMPTY, EMPTY, ROOF2, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, ROOF2, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY,
  EMPTY, EMPTY, EMPTY, ROOF2, EDGE1, EDGE1, EMPTY, EMPTY, EMPTY, EMPTY, ROOF2, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY,
  EMPTY, EMPTY, EMPTY, ROOF2, ROOF2, ROOF2, EDGE1, EMPTY, EMPTY, EMPTY, ROOF2, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY,
  EMPTY, EMPTY, EMPTY, ROOF2, ROOF2, ROOF2, ROOF2, EMPTY, EMPTY, EMPTY, ROOF2, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY,
  EDGE1, EDGE1, SIGN1, ROOF2, ROOF2, ROOF2, ROOF2, EMPTY, EMPTY, EMPTY, ROOF2, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY,
  BRICK, BRICK, BRICK, ROOF2, ROOF2, ROOF2, ROOF2, WATER, WATER, WATER, ROOF2, WATER, WATER, WATER, ROOF2, EDGE1, EDGE1, EDGE1, EDGE1, EDGE1, EDGE1, EDGE1, EDGE1, EDGE1, EDGE1, EDGE1, EDGE1, EDGE1, EDGE1, EDGE1, EDGE1, EDGE1, EDGE1, EDGE1,
  PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1, PLAT1,
};

const uint8_t PROGMEM level3StartingPositions[8] = {
1, 2,    4, 5,    6, 6,    14,8, 
};

const uint8_t PROGMEM level3EndingPositions[8] = {
1, 2,    4, 5,    6, 6,    14,8, 
};



const uint8_t *levelMaps[] =                    { level0Map, level1Map, level2Map, level3Map };
const uint8_t *levelStartingPositions[] =       { level0StartingPositions, level1StartingPositions, level2StartingPositions, level3StartingPositions };
const uint8_t *levelEndingPositions[] =         { level0EndingPositions, level1EndingPositions, level2EndingPositions, level3EndingPositions };
const uint8_t levelPositionsCount[] =           { 1, 6, 4 }; 

const int8_t levelInit[] = { 

// Level width   Level Height,   Level     Level     Player  Player
//                               X Offset  Y Offset  X Pos   Y Pos
  LEVEL_0_WIDTH, LEVEL_0_HEIGHT,       0,        0,     17,     48, 
  LEVEL_1_WIDTH, LEVEL_1_HEIGHT,     -54,      -56,     56,     48,
  LEVEL_2_WIDTH, LEVEL_2_HEIGHT,     -32,      -32,     56,     48, 
  LEVEL_3_WIDTH, LEVEL_3_HEIGHT,     -32,      -32,     56,     48 
};
